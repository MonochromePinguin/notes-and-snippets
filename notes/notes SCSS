‚óè pr√©processeur SCSS et SASS :

‚Ä¢ SASS :
	¬´ Syntaxically Awesome Styles Sheets ¬ª
syntaxe bas√©e sur l'indentation ...

comme √ßa ne marchait pas, syntaxe modifi√©e pour ressembler d'avantage √† CSS :
‚Üí

‚Ä¢SCSS :
 ¬´ Sassy CSS ¬ª


‚óè gr√¢ce aux @import, feuilles de style g√©n√©ralement structur√©es :
	main.scss
	vars.scss
	...


‚óè ajouts √† CSS :
variables,
mixins (fonctions),
boucles, conditions
import, extend,


‚óè mixins :
	@mixin bla($var) {
		...
	}


‚óè extends :
Pour r√©utiliser un bout de style
	.style1 { ... }
	.style2 {
		@extends .style1
		...
	}


‚óè calculs :
Comme en CSS3 sans le ¬´ calc() ¬ª
	width: 100% - 30 px;


‚óè calculs :
@if, @for, @while, ...
	$i: 3;
	@while $i > 0 {
		.item-#{$i} { border-radius: $i px }
		$i: $i -1;
	}


‚óè couleurs :
	darken( coul, ùëõ% )
	lightten()
	saturate()
	desaturate()
	complement()
	invert()
...


‚óè imbrication :
‚Ä¢ styles :
	.btn {
		border-radius: 0.5em;

		.btn-warning { color: orange }

		.btn-danger { color: red }

		&::after { ... }
		# ‚Üë le ¬´&¬ª reprend l'√©l√©ment parent

	}

‚Ä¢ media-query :
	article {
		...
		@media( min-aspect-ratio > 1 ) {
			...
		}
	}

‚Ä¢ parents/enfants :
	nav {
		background: black;

		> li {
			padding: 0.5em;
		}
	}


‚óè compilation du SCSS :
	via plugins dans les IDE,
	en ln de comm' (compass / ruby, etc.)
‚Ä¢ scssphp :
	script de conversion en PHP
‚Ä¢ webpack encore :
	fork de webpack utilisable avec symfony


